<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 9.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="1.36">
 <Namespaces>
  <Namespace Name="UOAI2">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'UOAI2' with another namespace.</Issue>
    </Message>
    <Message Id="UOAI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'UOAI' in namespace name 'UOAI2' by changing it to 'Uoai'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2\bin\Release\UOAI2.dll">
   <Modules>
    <Module Name="uoai2.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'UOAI2.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="UOAI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'UOAI' in assembly name 'UOAI2.dll' by changing it to 'Uoai'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'UOAI2.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'UOAI2.dll' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="UOAI2">
       <Types>
        <Type Name="UOAI" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="UOAI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'UOAI' in type name 'UOAI' by changing it to 'Uoai'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Clients" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.Clients' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+BufferHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'UOAI.BufferHandler' to end in 'Stream'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.BufferHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="685">'UOAI.BufferHandler.New(Byte())' initializes field 'UOAI.BufferHandler.curpos' of type 'Long' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="686">'UOAI.BufferHandler.New(Byte())' initializes field 'UOAI.BufferHandler.networkorder' of type 'Boolean' to false. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
            <Message Id="frombuffer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.BufferHandler.New(Byte())', correct the spelling of 'frombuffer' in parameter name 'frombuffer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Byte[],System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="671">'UOAI.BufferHandler.New(Byte(), Boolean)' initializes field 'UOAI.BufferHandler.curpos' of type 'Long' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.BufferHandler.New(Byte(), Boolean)', correct the spelling of 'b' in parameter name 'bNetworkOrder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="frombuffer" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.BufferHandler.New(Byte(), Boolean)', correct the spelling of 'frombuffer' in parameter name 'frombuffer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="681">'UOAI.BufferHandler.New(Integer)' initializes field 'UOAI.BufferHandler.curpos' of type 'Long' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="680">'UOAI.BufferHandler.New(Integer)' initializes field 'UOAI.BufferHandler.networkorder' of type 'Boolean' to false. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="676">'UOAI.BufferHandler.New(UInteger)' initializes field 'UOAI.BufferHandler.curpos' of type 'Long' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="675">'UOAI.BufferHandler.New(UInteger)' initializes field 'UOAI.BufferHandler.networkorder' of type 'Boolean' to false. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.UInt32,System.Boolean)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="690">'UOAI.BufferHandler.New(UInteger, Boolean)' initializes field 'UOAI.BufferHandler.curpos' of type 'Long' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.BufferHandler.New(UInteger, Boolean)', correct the spelling of 'b' in parameter name 'bNetworkOrder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#buffer" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="buffer" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="697">Correct the casing of 'buffer' in member name 'UOAI.BufferHandler.buffer()' by changing it to 'Buffer'.</Issue>
            </Message>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="697">Change 'UOAI.BufferHandler.buffer()' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#curpos" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.BufferHandler.curpos' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="curpos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'curpos' in member name 'UOAI.BufferHandler.curpos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#networkorder" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.BufferHandler.networkorder' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="networkorder" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'networkorder' in member name 'UOAI.BufferHandler.networkorder' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(System.Byte[],System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="761">In member 'UOAI.BufferHandler.Read(Byte(), Integer, Integer)', change parameter name 'destbuffer' to 'buffer' in order to match the identifier as it has been declared in 'Stream.Read(Byte(), Integer, Integer)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadByte()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readbyte" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="863">'UOAI.BufferHandler.ReadByte()' declares a variable, 'readbyte', of type 'Integer', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readbytes(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readbytes" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="831">Correct the casing of 'readbytes' in member name 'UOAI.BufferHandler.readbytes(Integer)' by changing it to 'Readbytes'.</Issue>
            </Message>
            <Message Id="readbytes" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="831">Correct the spelling of 'readbytes' in member name 'UOAI.BufferHandler.readbytes(Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readchar()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readchar" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="853">Correct the casing of 'readchar' in member name 'UOAI.BufferHandler.readchar()' by changing it to 'Readchar'.</Issue>
            </Message>
            <Message Id="readchar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="853">Correct the spelling of 'readchar' in member name 'UOAI.BufferHandler.readchar()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readint()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readint" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="841">Correct the casing of 'readint' in member name 'UOAI.BufferHandler.readint()' by changing it to 'Readint'.</Issue>
            </Message>
            <Message Id="readint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="841">Correct the spelling of 'readint' in member name 'UOAI.BufferHandler.readint()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readshort()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readshort" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="849">Correct the casing of 'readshort' in member name 'UOAI.BufferHandler.readshort()' by changing it to 'Readshort'.</Issue>
            </Message>
            <Message Id="readshort" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="849">Correct the spelling of 'readshort' in member name 'UOAI.BufferHandler.readshort()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readstr()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readstr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="873">Correct the casing of 'readstr' in member name 'UOAI.BufferHandler.readstr()' by changing it to 'Readstr'.</Issue>
            </Message>
            <Message Id="readstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="873">Correct the spelling of 'readstr' in member name 'UOAI.BufferHandler.readstr()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readstrn(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readstrn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="883">Correct the casing of 'readstrn' in member name 'UOAI.BufferHandler.readstrn(Integer)' by changing it to 'Readstrn'.</Issue>
            </Message>
            <Message Id="readstrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="883">Correct the spelling of 'readstrn' in member name 'UOAI.BufferHandler.readstrn(Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readuint()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readuint" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="837">Correct the casing of 'readuint' in member name 'UOAI.BufferHandler.readuint()' by changing it to 'Readuint'.</Issue>
            </Message>
            <Message Id="readuint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="837">Correct the spelling of 'readuint' in member name 'UOAI.BufferHandler.readuint()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readushort()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readushort" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="845">Correct the casing of 'readushort' in member name 'UOAI.BufferHandler.readushort()' by changing it to 'Readushort'.</Issue>
            </Message>
            <Message Id="readushort" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="845">Correct the spelling of 'readushort' in member name 'UOAI.BufferHandler.readushort()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readustr()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readustr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="891">Correct the casing of 'readustr' in member name 'UOAI.BufferHandler.readustr()' by changing it to 'Readustr'.</Issue>
            </Message>
            <Message Id="readustr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="891">Correct the spelling of 'readustr' in member name 'UOAI.BufferHandler.readustr()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readustrn(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="readustrn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="901">Correct the casing of 'readustrn' in member name 'UOAI.BufferHandler.readustrn(Integer)' by changing it to 'Readustrn'.</Issue>
            </Message>
            <Message Id="readustrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="901">Correct the spelling of 'readustrn' in member name 'UOAI.BufferHandler.readustrn(Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Write(System.Byte[],System.Int32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="808">'UOAI.BufferHandler.Write(Byte(), Integer, Integer)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="805">In member 'UOAI.BufferHandler.Write(Byte(), Integer, Integer)', change parameter name 'destbuffer' to 'buffer' in order to match the identifier as it has been declared in 'Stream.Write(Byte(), Integer, Integer)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteByte(System.Byte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="925">In member 'UOAI.BufferHandler.WriteByte(Byte)', change parameter name 'towrite' to 'value' in order to match the identifier as it has been declared in 'Stream.WriteByte(Byte)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writechar(System.SByte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writechar" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="931">Correct the casing of 'writechar' in member name 'UOAI.BufferHandler.writechar(SByte)' by changing it to 'Writechar'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="931">In method 'UOAI.BufferHandler.writechar(SByte)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writechar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="931">Correct the spelling of 'writechar' in member name 'UOAI.BufferHandler.writechar(SByte)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeint(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writeint" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="916">Correct the casing of 'writeint' in member name 'UOAI.BufferHandler.writeint(Integer)' by changing it to 'Writeint'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="916">In method 'UOAI.BufferHandler.writeint(Integer)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writeint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="916">Correct the spelling of 'writeint' in member name 'UOAI.BufferHandler.writeint(Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeshort(System.Int16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writeshort" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="922">Correct the casing of 'writeshort' in member name 'UOAI.BufferHandler.writeshort(Short)' by changing it to 'Writeshort'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="922">In method 'UOAI.BufferHandler.writeshort(Short)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writeshort" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="922">Correct the spelling of 'writeshort' in member name 'UOAI.BufferHandler.writeshort(Short)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writestr(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writestr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="937">Correct the casing of 'writestr' in member name 'UOAI.BufferHandler.writestr(String)' by changing it to 'Writestr'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="937">In method 'UOAI.BufferHandler.writestr(String)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writestr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="937">Correct the spelling of 'writestr' in member name 'UOAI.BufferHandler.writestr(String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writestrn(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writestrn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="947">Correct the casing of 'writestrn' in member name 'UOAI.BufferHandler.writestrn(String, Integer)' by changing it to 'Writestrn'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="947">In method 'UOAI.BufferHandler.writestrn(String, Integer)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writestrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="947">Correct the spelling of 'writestrn' in member name 'UOAI.BufferHandler.writestrn(String, Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeuint(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writeuint" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="913">Correct the casing of 'writeuint' in member name 'UOAI.BufferHandler.writeuint(UInteger)' by changing it to 'Writeuint'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="913">In method 'UOAI.BufferHandler.writeuint(UInteger)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writeuint" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="913">Correct the spelling of 'writeuint' in member name 'UOAI.BufferHandler.writeuint(UInteger)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeushort(System.UInt16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writeushort" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="919">Correct the casing of 'writeushort' in member name 'UOAI.BufferHandler.writeushort(UShort)' by changing it to 'Writeushort'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="919">In method 'UOAI.BufferHandler.writeushort(UShort)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writeushort" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="919">Correct the spelling of 'writeushort' in member name 'UOAI.BufferHandler.writeushort(UShort)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeustr(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writeustr" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="957">Correct the casing of 'writeustr' in member name 'UOAI.BufferHandler.writeustr(String)' by changing it to 'Writeustr'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="957">In method 'UOAI.BufferHandler.writeustr(String)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writeustr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="957">Correct the spelling of 'writeustr' in member name 'UOAI.BufferHandler.writeustr(String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeustrn(System.String,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="writeustrn" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="968">Correct the casing of 'writeustrn' in member name 'UOAI.BufferHandler.writeustrn(String, Integer)' by changing it to 'Writeustrn'.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="968">In method 'UOAI.BufferHandler.writeustrn(String, Integer)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="writeustrn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="968">Correct the spelling of 'writeustrn' in member name 'UOAI.BufferHandler.writeustrn(String, Integer)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+CallibrationInfo" Kind="Struct" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Callibration" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Callibration' in type name 'UOAI.CallibrationInfo'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.CallibrationInfo'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
           <Issue Name="Equals" Certainty="75" Level="Warning">'UOAI.CallibrationInfo' should override Equals.</Issue>
           <Issue Name="op_Equality" Certainty="75" Level="Warning">'UOAI.CallibrationInfo' should override the equality (==) and inequality (!=) operators.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#GenericGumpType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.GenericGumpType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IPIndex" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.IPIndex' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IPTable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.IPTable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#itempropgumpduplicate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.itempropgumpduplicate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="itempropgumpduplicate" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'itempropgumpduplicate' in member name 'UOAI.CallibrationInfo.itempropgumpduplicate' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#logincryptpatchpos" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.logincryptpatchpos' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="logincryptpatchpos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'logincryptpatchpos' in member name 'UOAI.CallibrationInfo.logincryptpatchpos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#logincryptpatchtarget" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.logincryptpatchtarget' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="logincryptpatchtarget" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'logincryptpatchtarget' in member name 'UOAI.CallibrationInfo.logincryptpatchtarget' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oButtonGumpOnClick" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oButtonGumpOnClick' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGenericGumpID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGenericGumpID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpClick" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpClick' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpClosable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpClosable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpClose" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpClose' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementClick" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementClick' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementHeight" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementHeight' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementNext" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementNext' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementPressedType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementPressedType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementReleasedType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementReleasedType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElements" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElements' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementSelected" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementSelected' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementTooltip" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementTooltip' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementWidth" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementWidth' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpElementY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpElementY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpFocus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpFocus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpHeight" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpHeight' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpItem" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpItem' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpNext" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpNext' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpPrevious" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpPrevious' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpSubElements" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpSubElements' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpSubGumpFirst" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpSubGumpFirst' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpSubGumpLast" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpSubGumpLast' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpUnicodeText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpUnicodeText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpWidth" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpWidth' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpWriteChar" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpWriteChar' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oGumpY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oGumpY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemColor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemColor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemContainer" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemContainer' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemContents" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemContents' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemContentsNext" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemContentsNext' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemContentsPrevious" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemContentsPrevious' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemDirection" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemDirection' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemFlags" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemFlags' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Flags" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flags' in member name 'UOAI.CallibrationInfo.oItemFlags' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemGump" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemGump' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemHighlightColor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemHighlightColor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemIsMobile" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemIsMobile' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemNext" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemNext' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemReputation" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemReputation' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemStackCount" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemStackCount' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemTypeIncrement" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemTypeIncrement' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oItemZ" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oItemZ' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oJournalColor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oJournalColor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oJournalNext" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oJournalNext' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oJournalPrevious" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oJournalPrevious' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oJournalText" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oJournalText' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMobileEnemy" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMobileEnemy' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMobileLayers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMobileLayers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMobileRunning" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMobileRunning' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMobileStatus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMobileStatus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMobileWarMode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMobileWarMode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMultiContents" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMultiContents' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'UOAI.CallibrationInfo.oMultiContents' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oMultiType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oMultiType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'UOAI.CallibrationInfo.oMultiType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oPaperdollTitle" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oPaperdollTitle' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Paperdoll" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Paperdoll' in member name 'UOAI.CallibrationInfo.oPaperdollTitle' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oStatusName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.oStatusName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pAllocate" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pAllocate' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pAlwaysRun" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pAlwaysRun' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pBDoPathfind" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pBDoPathfind' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Pathfind" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Pathfind' in member name 'UOAI.CallibrationInfo.pBDoPathfind' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pBLoggedIn" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pBLoggedIn' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pBTargCurs" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pBTargCurs' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Targ" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Targ' in member name 'UOAI.CallibrationInfo.pBTargCurs' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pCalculatePath" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pCalculatePath' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pCharName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pCharName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pConnLossHook" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pConnLossHook' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Conn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conn' in member name 'UOAI.CallibrationInfo.pConnLossHook' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pDefaultNameString" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pDefaultNameString' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pDefaultOnTarget" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pDefaultOnTarget' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pDefaultPropertiesString" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pDefaultPropertiesString' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pDoGetName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pDoGetName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pDoGetProperties" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pDoGetProperties' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pEventMacro" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pEventMacro' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pFacet" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pFacet' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pFindItemByID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pFindItemByID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pFindStatusGump" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pFindStatusGump' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pGetName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pGetName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pGetProperties" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pGetProperties' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pGumpList" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pGumpList' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pGumpOpener" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pGumpOpener' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pHandlePacketHook" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pHandlePacketHook' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pHoldingID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pHoldingID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pInvertPath" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pInvertPath' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pItemList" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pItemList' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pJournalStart" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pJournalStart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLandTileData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLandTileData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLastObject" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLastObject' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLastObjectFunc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLastObjectFunc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLastObjectType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLastObjectType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLastSkill" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLastSkill' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLastSpell" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLastSpell' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLoadFromIndexedFile" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLoadFromIndexedFile' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLoadFromMulFile" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLoadFromMulFile' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Mul" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Mul' in member name 'UOAI.CallibrationInfo.pLoadFromMulFile' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLoginCrypt" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLoginCrypt' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'UOAI.CallibrationInfo.pLoginCrypt' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLTargetID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLTargetID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLTargetKind" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLTargetKind' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLTargetTile" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLTargetTile' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLTargetX" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLTargetX' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLTargetY" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLTargetY' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pLTargetZ" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pLTargetZ' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pMapInfo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pMapInfo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pOnTarget" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pOnTarget' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pOriginalConnLossHandler" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pOriginalConnLossHandler' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Conn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Conn' in member name 'UOAI.CallibrationInfo.pOriginalConnLossHandler' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pOriginalHandlePacket" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pOriginalHandlePacket' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pOriginalSend" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pOriginalSend' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pOriginalSendb" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pOriginalSendb' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Sendb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sendb' in member name 'UOAI.CallibrationInfo.pOriginalSendb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pOriginalSendc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pOriginalSendc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Sendc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sendc' in member name 'UOAI.CallibrationInfo.pOriginalSendc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PortTable" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.PortTable' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPacketHandlerFunc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPacketHandlerFunc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPacketInfo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPacketInfo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPartyMembers" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPartyMembers' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPatchPos2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPatchPos2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPatchPos3" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPatchPos3' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPatchPos4" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPatchPos4' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPlayer" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPlayer' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPlayerStatus" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPlayerStatus' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPropGumpID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPropGumpID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPropInitA" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPropInitA' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPropInitB" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPropInitB' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pPropsAndNameGet" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pPropsAndNameGet' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pRecv" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pRecv' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Recv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Recv' in member name 'UOAI.CallibrationInfo.pRecv' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSend" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSend' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSendbHook" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSendbHook' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Sendb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sendb' in member name 'UOAI.CallibrationInfo.pSendbHook' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSendcHook" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSendcHook' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Sendc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Sendc' in member name 'UOAI.CallibrationInfo.pSendcHook' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSendHook" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSendHook' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pServerName" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pServerName' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pShowGump" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pShowGump' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pShowItemPropertyGump" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pShowItemPropertyGump' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSkillCaps" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSkillCaps' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSkillLocks" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSkillLocks' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSkillModifiedValues" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSkillModifiedValues' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSkillRealValues" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSkillRealValues' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSocketObjectVtbl" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSocketObjectVtbl' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Vtbl" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Vtbl' in member name 'UOAI.CallibrationInfo.pSocketObjectVtbl' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pSockObject" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pSockObject' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pStartOfPath" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pStartOfPath' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pStaticTileData" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pStaticTileData' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pStatusGumpConstructor" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pStatusGumpConstructor' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pStringObjectInit" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pStringObjectInit' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pTextOut" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pTextOut' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pWalkPath" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pWalkPath' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pWinMain" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.pWinMain' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#recvcryptpatchpos" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.recvcryptpatchpos' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="recvcryptpatchpos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'recvcryptpatchpos' in member name 'UOAI.CallibrationInfo.recvcryptpatchpos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#recvcryptpatchtarget" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.recvcryptpatchtarget' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="recvcryptpatchtarget" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'recvcryptpatchtarget' in member name 'UOAI.CallibrationInfo.recvcryptpatchtarget' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sendcryptpatchpos" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.sendcryptpatchpos' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sendcryptpatchpos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sendcryptpatchpos' in member name 'UOAI.CallibrationInfo.sendcryptpatchpos' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sendcryptpatchtarget" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.CallibrationInfo.sendcryptpatchtarget' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sendcryptpatchtarget" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sendcryptpatchtarget' in member name 'UOAI.CallibrationInfo.sendcryptpatchtarget' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+EventTypeConstants" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">The constituent members of 'UOAI.EventTypeConstants' appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.EventTypeConstants'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'UOAI.EventTypeConstants' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#connection_loss" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="connection" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'connection' in member name 'UOAI.EventTypeConstants.connection_loss' by changing it to 'Connection'.</Issue>
            </Message>
            <Message Id="loss" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'loss' in member name 'UOAI.EventTypeConstants.connection_loss' by changing it to 'Loss'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.connection_loss'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#key_down" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="down" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'down' in member name 'UOAI.EventTypeConstants.key_down' by changing it to 'Down'.</Issue>
            </Message>
            <Message Id="key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'key' in member name 'UOAI.EventTypeConstants.key_down' by changing it to 'Key'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.key_down'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#key_up" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="key" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'key' in member name 'UOAI.EventTypeConstants.key_up' by changing it to 'Key'.</Issue>
            </Message>
            <Message Id="up" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'up' in member name 'UOAI.EventTypeConstants.key_up' by changing it to 'Up'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.key_up'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#object_destroyed" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="destroyed" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'destroyed' in member name 'UOAI.EventTypeConstants.object_destroyed' by changing it to 'Destroyed'.</Issue>
            </Message>
            <Message Id="object" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'object' in member name 'UOAI.EventTypeConstants.object_destroyed' by changing it to 'Object'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.object_destroyed'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#packet_handled" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="handled" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'handled' in member name 'UOAI.EventTypeConstants.packet_handled' by changing it to 'Handled'.</Issue>
            </Message>
            <Message Id="packet" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'packet' in member name 'UOAI.EventTypeConstants.packet_handled' by changing it to 'Packet'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.packet_handled'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#received_packet" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="packet" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'packet' in member name 'UOAI.EventTypeConstants.received_packet' by changing it to 'Packet'.</Issue>
            </Message>
            <Message Id="received" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'received' in member name 'UOAI.EventTypeConstants.received_packet' by changing it to 'Received'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.received_packet'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sent_packet" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="packet" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'packet' in member name 'UOAI.EventTypeConstants.sent_packet' by changing it to 'Packet'.</Issue>
            </Message>
            <Message Id="sent" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'sent' in member name 'UOAI.EventTypeConstants.sent_packet' by changing it to 'Sent'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'UOAI.EventTypeConstants.sent_packet'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+Imports" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CloseHandle(System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'UOAI.Imports.CloseHandle(UInteger)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.CloseHandle(UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hObject' of P/Invoke 'UOAI.Imports.CloseHandle(UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateProcess(System.String,System.String,UOAI2.UOAI+Imports+SECURITY_ATTRIBUTES&amp;,UOAI2.UOAI+Imports+SECURITY_ATTRIBUTES&amp;,System.Boolean,UOAI2.UOAI+Imports+CreationFlags,System.IntPtr,System.String,UOAI2.UOAI+Imports+STARTUPINFO&amp;,UOAI2.UOAI+Imports+PROCESS_INFORMATION&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Warning">Add the MarshalAsAttribute to parameter 'bInheritHandles' of P/Invoke 'UOAI.Imports.CreateProcess(String, String, ByRef UOAI.Imports.SECURITY_ATTRIBUTES, ByRef UOAI.Imports.SECURITY_ATTRIBUTES, Boolean, UOAI.Imports.CreationFlags, IntPtr, String, ByRef UOAI.Imports.STARTUPINFO, ByRef UOAI.Imports.PROCESS_INFORMATION)'. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'UOAI.Imports.CreateProcess(String, String, ByRef UOAI.Imports.SECURITY_ATTRIBUTES, ByRef UOAI.Imports.SECURITY_ATTRIBUTES, Boolean, UOAI.Imports.CreationFlags, IntPtr, String, ByRef UOAI.Imports.STARTUPINFO, ByRef UOAI.Imports.PROCESS_INFORMATION)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.CreateProcess(String, String, ByRef UOAI.Imports.SECURITY_ATTRIBUTES, ByRef UOAI.Imports.SECURITY_ATTRIBUTES, Boolean, UOAI.Imports.CreationFlags, IntPtr, String, ByRef UOAI.Imports.STARTUPINFO, ByRef UOAI.Imports.PROCESS_INFORMATION)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpApplicationName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpCommandLine' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="7" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpCurrentDirectory' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EnumWindows(UOAI2.UOAI+Imports+EnumWindowsProc,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'UOAI.Imports.EnumWindows(UOAI.Imports.EnumWindowsProc, UInteger)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.EnumWindows(UOAI.Imports.EnumWindowsProc, UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lParam' of P/Invoke 'UOAI.Imports.EnumWindows(UOAI.Imports.EnumWindowsProc, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FindWindowEx(System.UInt32,System.UInt32,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.FindWindowEx(UInteger, UInteger, String, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwndParent' of P/Invoke 'UOAI.Imports.FindWindowEx(UInteger, UInteger, String, String)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hwndChildAfter' of P/Invoke 'UOAI.Imports.FindWindowEx(UInteger, UInteger, String, String)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'UOAI.Imports.FindWindowEx(UInteger, UInteger, String, String)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpszClass' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpszWindow' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClassName(System.UInt32,System.Text.StringBuilder,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'UOAI.Imports.GetClassName(UInteger, StringBuilder, UInteger)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.GetClassName(UInteger, StringBuilder, UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hWnd' of P/Invoke 'UOAI.Imports.GetClassName(UInteger, StringBuilder, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpClassName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetExitCodeProcess(System.UInt32,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.GetExitCodeProcess(UInteger, ByRef UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hProcess' of P/Invoke 'UOAI.Imports.GetExitCodeProcess(UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetProcAddress(System.IntPtr,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.GetProcAddress(IntPtr, String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'procedureName' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWindowThreadProcessId(System.UInt32,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'UOAI.Imports.GetWindowThreadProcessId(UInteger, ByRef UInteger)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.GetWindowThreadProcessId(UInteger, ByRef UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hWnd' of P/Invoke 'UOAI.Imports.GetWindowThreadProcessId(UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LoadLibrary(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.LoadLibrary(String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'dllToLoad' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenProcess(UOAI2.UOAI+Imports+ProcessAccess,System.Boolean,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.OpenProcess(UOAI.Imports.ProcessAccess, Boolean, UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'UOAI.Imports.OpenProcess(UOAI.Imports.ProcessAccess, Boolean, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostMessage(System.UInt32,System.UInt32,System.UInt32,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'UOAI.Imports.PostMessage(UInteger, UInteger, UInteger, UInteger)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.PostMessage(UInteger, UInteger, UInteger, UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hWnd' of P/Invoke 'UOAI.Imports.PostMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'wParam' of P/Invoke 'UOAI.Imports.PostMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lParam' of P/Invoke 'UOAI.Imports.PostMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadProcessMemory(System.UInt32,System.UInt32,System.Byte[],System.UInt32,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'UOAI.Imports.ReadProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.ReadProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hProcess' of P/Invoke 'UOAI.Imports.ReadProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lpBaseAddress' of P/Invoke 'UOAI.Imports.ReadProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'dwSize' of P/Invoke 'UOAI.Imports.ReadProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RegisterWindowMessage(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">'UOAI.Imports.RegisterWindowMessage(String)' appears to have no upstream public or protected callers.</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.RegisterWindowMessage(String)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'lpString' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ResumeThread(System.IntPtr)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.ResumeThread(IntPtr)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendMessage(System.UInt32,System.UInt32,System.UInt32,System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.SendMessage(UInteger, UInteger, UInteger, UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hWnd' of P/Invoke 'UOAI.Imports.SendMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'wParam' of P/Invoke 'UOAI.Imports.SendMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lParam' of P/Invoke 'UOAI.Imports.SendMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'UOAI.Imports.SendMessage(UInteger, UInteger, UInteger, UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#VirtualProtectEx(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'UOAI.Imports.VirtualProtectEx(UInteger, UInteger, UInteger, UInteger, ByRef UInteger)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.VirtualProtectEx(UInteger, UInteger, UInteger, UInteger, ByRef UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hProcess' of P/Invoke 'UOAI.Imports.VirtualProtectEx(UInteger, UInteger, UInteger, UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lpAddress' of P/Invoke 'UOAI.Imports.VirtualProtectEx(UInteger, UInteger, UInteger, UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="2" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'dwSize' of P/Invoke 'UOAI.Imports.VirtualProtectEx(UInteger, UInteger, UInteger, UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteProcessMemory(System.UInt32,System.UInt32,System.Byte[],System.UInt32,System.UInt32&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'UOAI.Imports.WriteProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'UOAI.Imports.WriteProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'hProcess' of P/Invoke 'UOAI.Imports.WriteProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="1" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'lpBaseAddress' of P/Invoke 'UOAI.Imports.WriteProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
            <Message Id="3" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">As it is declared in your code, parameter 'nSize' of P/Invoke 'UOAI.Imports.WriteProcessMemory(UInteger, UInteger, Byte(), UInteger, ByRef UInteger)' will be 4 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 8 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'UInteger'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+IPCConstants" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'UOAI.IPCConstants' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="303">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.allocmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="313">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.ccallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="325">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.clientlockmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="327">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.clientunlockmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="301">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.customcallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="305">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.freemessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="323">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.getcallibrationinfomessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="339">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.geteventportmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="341">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.hookitemdestructormessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="319">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.memcpymessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="321">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.memsetzeromessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="307">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.newstackmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="340">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.patchencryptionmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="309">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.pushmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="335">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.querypacketfiltermessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="333">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.removepacketfiltermessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="329">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.safestdthiscallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="331">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.setpacketfiltermessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="342">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.setupeventtimermessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="337">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.skipuoaistdthiscallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="311">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.stdcallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="317">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.stdthiscallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
             <Issue Certainty="90" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="315">'UOAI.IPCConstants.New()' initializes field 'UOAI.IPCConstants.thiscallmessage' of type 'UInteger' to 0. Remove this initialization because it will be done automatically by the runtime.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#customcallmessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.customcallmessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#memcpymessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.memcpymessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#memsetzeromessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.memsetzeromessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#querypacketfiltermessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.querypacketfiltermessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#removepacketfiltermessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.removepacketfiltermessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#safestdthiscallmessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.safestdthiscallmessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#setpacketfiltermessage" Kind="Field" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.IPCConstants.setpacketfiltermessage' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+ProcessStream" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'UOAI.ProcessStream' so that it does not end in 'Stream'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.ProcessStream'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="16">'UOAI.ProcessStream.New(UInteger)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="PID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'UOAI.ProcessStream.New(UInteger)', correct the casing of 'PID' in parameter name 'PID' by changing it to 'pid'.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="16">Because the behavior of 'UInteger.ToString()' could vary based on the current user's locale settings, replace this call in 'UOAI.ProcessStream.New(UInteger)' with a call to 'UInteger.ToString(IFormatProvider)'. If the result of 'UInteger.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PID" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="PID" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="23">Correct the casing of 'PID' in member name 'UOAI.ProcessStream.PID()' by changing it to 'Pid'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Read(System.UInt32,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="bytecount" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="51">In method 'UOAI.ProcessStream.Read(UInteger, UInteger)', correct the spelling of 'bytecount' in parameter name 'bytecount' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadInt(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="76">Consider replacing the language-specific data type identifier 'Int' in member name 'UOAI.ProcessStream.ReadInt(UInteger)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadShort(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="short" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="94">Consider replacing the language-specific data type identifier 'Short' in member name 'UOAI.ProcessStream.ReadShort(UInteger)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadStr(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="121">Correct the spelling of 'Str' in member name 'UOAI.ProcessStream.ReadStr(UInteger)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadStrn(System.UInt32,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Strn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="146">Correct the spelling of 'Strn' in member name 'UOAI.ProcessStream.ReadStrn(UInteger, UInteger)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadUInt(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="uint" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="67">Consider replacing the language-specific data type identifier 'UInt' in member name 'UOAI.ProcessStream.ReadUInt(UInteger)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadUShort(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ushort" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="85">Consider replacing the language-specific data type identifier 'UShort' in member name 'UOAI.ProcessStream.ReadUShort(UInteger)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadUStr(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="134">Correct the spelling of 'Str' in member name 'UOAI.ProcessStream.ReadUStr(UInteger)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadUStrn(System.UInt32,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Strn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="155">Correct the spelling of 'Strn' in member name 'UOAI.ProcessStream.ReadUStrn(UInteger, UInteger)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Write(System.UInt32,System.Byte[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="166">In method 'UOAI.ProcessStream.Write(UInteger, Byte())', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteByte(System.UInt32,System.Byte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="213">In method 'UOAI.ProcessStream.WriteByte(UInteger, Byte)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteChar(System.UInt32,System.SByte)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="216">In method 'UOAI.ProcessStream.WriteChar(UInteger, SByte)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteInt(System.UInt32,System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="204">In method 'UOAI.ProcessStream.WriteInt(UInteger, Integer)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteShort(System.UInt32,System.Int16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="207">In method 'UOAI.ProcessStream.WriteShort(UInteger, Short)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteStr(System.UInt32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="182">Correct the spelling of 'Str' in member name 'UOAI.ProcessStream.WriteStr(UInteger, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="182">In method 'UOAI.ProcessStream.WriteStr(UInteger, String)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteUInt(System.UInt32,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="201">In method 'UOAI.ProcessStream.WriteUInt(UInteger, UInteger)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteUShort(System.UInt32,System.UInt16)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="210">In method 'UOAI.ProcessStream.WriteUShort(UInteger, UShort)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteUStr(System.UInt32,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="190">Correct the spelling of 'Str' in member name 'UOAI.ProcessStream.WriteUStr(UInteger, String)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="towrite" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="ProcessStream.vb" Line="190">In method 'UOAI.ProcessStream.WriteUStr(UInteger, String)', correct the spelling of 'towrite' in parameter name 'towrite' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+RStack" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'UOAI.RStack' so that it does not end in 'Stack'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.RStack'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(UOAI2.UOAI+UOClient)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="onclient" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.RStack.New(UOAI.UOClient)', correct the spelling of 'onclient' in parameter name 'onclient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#offset" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="offset" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="388">Correct the casing of 'offset' in member name 'UOAI.RStack.offset()' by changing it to 'Offset'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Push(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="topush" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="384">In method 'UOAI.RStack.Push(UInteger)', correct the spelling of 'topush' in parameter name 'topush' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+UOClient" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClient'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Close()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="28">'UOAI.UOClient.Close()' calls into 'Process.GetProcessById(Integer)' which has a LinkDemand. By making this call, 'Process.GetProcessById(Integer)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClient.Close()'&#xD;&#xA;   -&gt;'UOAI.UOClient.Close()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="28">'UOAI.UOClient.Close()' calls into 'Process.Kill()' which has a LinkDemand. By making this call, 'Process.Kill()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClient.Close()'&#xD;&#xA;   -&gt;'UOAI.UOClient.Close()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'UOAI.UOClient.PID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#onClientExit" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'UOAI.UOClient.onClientExitEventHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'UOAI.UOClient.onClientExitEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
            <Message Id="on" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'on' in member name 'UOAI.UOClient.onClientExit()' by changing it to 'On'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+UOClient+onClientExitEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="on" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'on' in type name 'UOAI.UOClient.onClientExitEventHandler' by changing it to 'On'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClient.onClientExitEventHandler'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UOAI+UOClientDll" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClientDll'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'UOAI.UOClientDll' because it creates members of the following IDisposable types: 'Socket'. If 'UOAI.UOClientDll' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="468">'UOAI.UOClientDll.New()' creates an exception of type 'Exception'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="471">'UOAI.UOClientDll.New()' creates an exception of type 'Exception'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="474">'UOAI.UOClientDll.New()' creates an exception of type 'Exception'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
             <Issue Name="NoAllowedExceptions" Certainty="90" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="477">'UOAI.UOClientDll.New()' creates an exception of type 'Exception'. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="468">'UOAI.UOClientDll.New()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="471">'UOAI.UOClientDll.New()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="474">'UOAI.UOClientDll.New()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="477">'UOAI.UOClientDll.New()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="454">Initialize all static fields in 'UOAI.UOClientDll' when those fields are declared and remove the explicit static constructor.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(UOAI2.UOAI+ProcessStream,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError">'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)' calls into 'EventWaitHandle.OpenExisting(String)' which has a LinkDemand. By making this call, 'EventWaitHandle.OpenExisting(String)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)'</Issue>
            </Message>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="446">'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message Id="clientprocess" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)', correct the spelling of 'clientprocess' in parameter name 'clientprocess' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="tid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)', correct the spelling of 'tid' in parameter name 'tid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="System.UInt32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="429">Because the behavior of 'UInteger.ToString(String)' could vary based on the current user's locale settings, replace this call in 'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)' with a call to 'UInteger.ToString(String, IFormatProvider)'. If the result of 'UInteger.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="450">Because the behavior of 'UInteger.ToString(String)' could vary based on the current user's locale settings, replace this call in 'UOAI.UOClientDll.New(UOAI.ProcessStream, UInteger)' with a call to 'UInteger.ToString(String, IFormatProvider)'. If the result of 'UInteger.ToString(String, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#allocate(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="allocate" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="513">Correct the casing of 'allocate' in member name 'UOAI.UOClientDll.allocate(UInteger)' by changing it to 'Allocate'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ccall(System.UInt32,System.UInt32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ccall" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="539">Correct the casing of 'ccall' in member name 'UOAI.UOClientDll.ccall(UInteger, UInteger())' by changing it to 'Ccall'.</Issue>
            </Message>
            <Message Id="ccall" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="539">Correct the spelling of 'ccall' in member name 'UOAI.UOClientDll.ccall(UInteger, UInteger())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="functionaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="539">In method 'UOAI.UOClientDll.ccall(UInteger, UInteger())', correct the spelling of 'functionaddress' in parameter name 'functionaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#free(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="free" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="516">Correct the casing of 'free' in member name 'UOAI.UOClientDll.free(UInteger)' by changing it to 'Free'.</Issue>
            </Message>
            <Message Id="tofree" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="516">In method 'UOAI.UOClientDll.free(UInteger)', correct the spelling of 'tofree' in parameter name 'tofree' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCallibrations()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Callibrations" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="632">Correct the spelling of 'Callibrations' in member name 'UOAI.UOClientDll.GetCallibrations()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="632">Change 'UOAI.UOClientDll.GetCallibrations()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClientVersion" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UOAI.UOClientDll.GetClientVersion' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEventPort()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="645">Change 'UOAI.UOClientDll.GetEventPort()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#HookDestructor(System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="objectaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="519">In method 'UOAI.UOClientDll.HookDestructor(UInteger)', correct the spelling of 'objectaddress' in parameter name 'objectaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InjectSelf" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UOAI.UOClientDll.InjectSelf' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IPCPost(System.UInt32,System.UInt32,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IPC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="502">Correct the casing of 'IPC' in member name 'UOAI.UOClientDll.IPCPost(UInteger, UInteger, UInteger)' by changing it to 'Ipc'.</Issue>
            </Message>
            <Message Id="Param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="502">In method 'UOAI.UOClientDll.IPCPost(UInteger, UInteger, UInteger)', correct the spelling of 'Param' in parameter name 'lParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="502">In method 'UOAI.UOClientDll.IPCPost(UInteger, UInteger, UInteger)', correct the spelling of 'Param' in parameter name 'wParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="l" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="502">In method 'UOAI.UOClientDll.IPCPost(UInteger, UInteger, UInteger)', correct the spelling of 'l' in parameter name 'lParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="w" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="502">In method 'UOAI.UOClientDll.IPCPost(UInteger, UInteger, UInteger)', correct the spelling of 'w' in parameter name 'wParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IPCSend(System.UInt32,System.UInt32,System.UInt32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="IPC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="491">Correct the casing of 'IPC' in member name 'UOAI.UOClientDll.IPCSend(UInteger, UInteger, UInteger)' by changing it to 'Ipc'.</Issue>
            </Message>
            <Message Id="Param" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="491">In method 'UOAI.UOClientDll.IPCSend(UInteger, UInteger, UInteger)', correct the spelling of 'Param' in parameter name 'lParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="491">In method 'UOAI.UOClientDll.IPCSend(UInteger, UInteger, UInteger)', correct the spelling of 'Param' in parameter name 'wParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="l" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="491">In method 'UOAI.UOClientDll.IPCSend(UInteger, UInteger, UInteger)', correct the spelling of 'l' in parameter name 'lParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="w" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="491">In method 'UOAI.UOClientDll.IPCSend(UInteger, UInteger, UInteger)', correct the spelling of 'w' in parameter name 'wParam' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#m_tid" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'UOAI.UOClientDll.m_tid' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MultiClientPatch" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in member name 'UOAI.UOClientDll.MultiClientPatch' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'UOAI.UOClientDll.MultiClientPatch' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#pUOClientDll" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalWarning">Review usage of 'UOAI.UOClientDll.pUOClientDll' (a 'IntPtr' instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RawDataToObject(System.Byte[]&amp;,System.Type)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="404">'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)' calls into 'GCHandle.AddrOfPinnedObject()' which has a LinkDemand. By making this call, 'GCHandle.AddrOfPinnedObject()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.GetCallibrations()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="404">'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)' calls into 'GCHandle.Alloc(Object, GCHandleType)' which has a LinkDemand. By making this call, 'GCHandle.Alloc(Object, GCHandleType)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.GetCallibrations()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="404">'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)' calls into 'GCHandle.Free()' which has a LinkDemand. By making this call, 'GCHandle.Free()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.GetCallibrations()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="404">'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)' calls into 'Marshal.PtrToStructure(IntPtr, Type)' which has a LinkDemand. By making this call, 'Marshal.PtrToStructure(IntPtr, Type)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.RawDataToObject(ByRef Byte(), Type)'&#xD;&#xA;   -&gt;'UOAI.UOClientDll.GetCallibrations()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#skipuoai_stdthiscall(System.UInt32,System.UInt32,System.UInt32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="skipuoai" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">Correct the casing of 'skipuoai' in member name 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())' by changing it to 'Skipuoai'.</Issue>
            </Message>
            <Message Id="stdthiscall" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">Correct the casing of 'stdthiscall' in member name 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())' by changing it to 'Stdthiscall'.</Issue>
            </Message>
            <Message Id="functionaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">In method 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())', correct the spelling of 'functionaddress' in parameter name 'functionaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="skipuoai" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">Correct the spelling of 'skipuoai' in member name 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stdthiscall" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">Correct the spelling of 'stdthiscall' in member name 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="thispar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">In method 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())', correct the spelling of 'thispar' in parameter name 'thispar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="593">Remove the underscores from member name 'UOAI.UOClientDll.skipuoai_stdthiscall(UInteger, UInteger, UInteger())'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stdcall(System.UInt32,System.UInt32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="stdcall" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="523">Correct the casing of 'stdcall' in member name 'UOAI.UOClientDll.stdcall(UInteger, UInteger())' by changing it to 'Stdcall'.</Issue>
            </Message>
            <Message Id="functionaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="523">In method 'UOAI.UOClientDll.stdcall(UInteger, UInteger())', correct the spelling of 'functionaddress' in parameter name 'functionaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stdcall" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="523">Correct the spelling of 'stdcall' in member name 'UOAI.UOClientDll.stdcall(UInteger, UInteger())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#stdthiscall(System.UInt32,System.UInt32,System.UInt32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="stdthiscall" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="555">Correct the casing of 'stdthiscall' in member name 'UOAI.UOClientDll.stdthiscall(UInteger, UInteger, UInteger())' by changing it to 'Stdthiscall'.</Issue>
            </Message>
            <Message Id="functionaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="555">In method 'UOAI.UOClientDll.stdthiscall(UInteger, UInteger, UInteger())', correct the spelling of 'functionaddress' in parameter name 'functionaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="stdthiscall" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="555">Correct the spelling of 'stdthiscall' in member name 'UOAI.UOClientDll.stdthiscall(UInteger, UInteger, UInteger())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="thispar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="555">In method 'UOAI.UOClientDll.stdthiscall(UInteger, UInteger, UInteger())', correct the spelling of 'thispar' in parameter name 'thispar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#thiscall(System.UInt32,System.UInt32,System.UInt32[])" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="thiscall" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="574">Correct the casing of 'thiscall' in member name 'UOAI.UOClientDll.thiscall(UInteger, UInteger, UInteger())' by changing it to 'Thiscall'.</Issue>
            </Message>
            <Message Id="functionaddress" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="574">In method 'UOAI.UOClientDll.thiscall(UInteger, UInteger, UInteger())', correct the spelling of 'functionaddress' in parameter name 'functionaddress' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="thiscall" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="574">Correct the spelling of 'thiscall' in member name 'UOAI.UOClientDll.thiscall(UInteger, UInteger, UInteger())' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="thispar" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOClientDll.vb" Line="574">In method 'UOAI.UOClientDll.thiscall(UInteger, UInteger, UInteger())', correct the spelling of 'thispar' in parameter name 'thispar' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UOAI+UOClientDll+GetClientVersionDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="pid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'UOAI.UOClientDll.GetClientVersionDelegate', correct the spelling of 'pid' in parameter name 'pid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'UOAI.UOClientDll.GetClientVersionDelegate' so that it does not end in 'Delegate'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClientDll.GetClientVersionDelegate'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UOAI+UOClientDll+InjectSelfDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="threadid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'UOAI.UOClientDll.InjectSelfDelegate', correct the spelling of 'threadid' in parameter name 'threadid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'UOAI.UOClientDll.InjectSelfDelegate' so that it does not end in 'Delegate'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClientDll.InjectSelfDelegate'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UOAI+UOClientDll+MultiClientPatchDelegate" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Multi" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Multi' in type name 'UOAI.UOClientDll.MultiClientPatchDelegate'.</Issue>
          </Message>
          <Message Id="processid" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="DelegateParameter" Certainty="75" Level="CriticalWarning">In delegate 'UOAI.UOClientDll.MultiClientPatchDelegate', correct the spelling of 'processid' in parameter name 'processid' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'UOAI.UOClientDll.MultiClientPatchDelegate' so that it does not end in 'Delegate'.</Issue>
          </Message>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClientDll.MultiClientPatchDelegate'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="UOAI+UOClientList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'UOAI.UOClientList'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Client(System.Int32)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Index" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="150">In member 'UOAI.UOClientList.Client(Integer)', correct the casing of 'Index' in parameter name 'Index' by changing it to 'index'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClientProcessExit(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ReviewVisibleEventHandlers" Category="Microsoft.Security" CheckId="CA2109" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="Breaking">
             <Issue Certainty="40" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="189">Consider making 'UOAI.UOClientList.ClientProcessExit(Object, EventArgs)' not externally visible.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ForceUpdateClientList()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="157">'UOAI.UOClientList.ForceUpdateClientList()' calls into 'Process.EnableRaisingEvents.Set(Boolean)' which has a LinkDemand. By making this call, 'Process.EnableRaisingEvents.Set(Boolean)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="157">'UOAI.UOClientList.ForceUpdateClientList()' calls into 'Process.Exited.AddHandler(EventHandler)' which has a LinkDemand. By making this call, 'Process.Exited.AddHandler(EventHandler)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="157">'UOAI.UOClientList.ForceUpdateClientList()' calls into 'Process.GetProcessesByName(String)' which has a LinkDemand. By making this call, 'Process.GetProcessesByName(String)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="157">'UOAI.UOClientList.ForceUpdateClientList()' calls into 'Process.Id.Get()' which has a LinkDemand. By making this call, 'Process.Id.Get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="157">'UOAI.UOClientList.ForceUpdateClientList()' calls into 'Process.MainWindowTitle.Get()' which has a LinkDemand. By making this call, 'Process.MainWindowTitle.Get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.ForceUpdateClientList()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LaunchClient()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'Process.EnableRaisingEvents.Set(Boolean)' which has a LinkDemand. By making this call, 'Process.EnableRaisingEvents.Set(Boolean)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'Process.Exited.AddHandler(EventHandler)' which has a LinkDemand. By making this call, 'Process.Exited.AddHandler(EventHandler)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'Process.Id.Get()' which has a LinkDemand. By making this call, 'Process.Id.Get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'Process.Start()' which has a LinkDemand. By making this call, 'Process.Start()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'Process.StartInfo.Get()' which has a LinkDemand. By making this call, 'Process.StartInfo.Get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'ProcessStartInfo.FileName.Set(String)' which has a LinkDemand. By making this call, 'ProcessStartInfo.FileName.Set(String)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="76">'UOAI.UOClientList.LaunchClient()' calls into 'ProcessStartInfo.WorkingDirectory.Set(String)' which has a LinkDemand. By making this call, 'ProcessStartInfo.WorkingDirectory.Set(String)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LaunchClient2()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="UOAI2.UOAI+Imports.ResumeThread(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Name="HResultOrErrorCode" Certainty="95" Level="Warning" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="112">'UOAI.UOClientList.LaunchClient2()' calls 'UOAI.Imports.ResumeThread(IntPtr)' but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2010-01-20 02:04:47Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="C:\Users\Eroc\Desktop\UOAI SVN\UOAI2\UOAI2" File="UOAI.vb" Line="94">'UOAI.UOClientList.LaunchClient2()' calls into 'Marshal.SizeOf(Object)' which has a LinkDemand. By making this call, 'Marshal.SizeOf(Object)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient2()'&#xD;&#xA;   -&gt;'UOAI.UOClientList.LaunchClient2()'</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182127(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182130(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182264(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182265(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms245042(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182133(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182141(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
   <Name>Do not ignore method results</Name>
   <Description>The result of methods that return new instances of strings should be assigned to a variable and subsequently used. If the result of a method that creates a new object, such as String.ToLower(), is not assigned to a variable, the call is wasted.</Description>
   <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182273(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>Do not indirectly expose methods with link demands</Name>
   <Description>Do not wrap a method protected by a LinkDemand with a method that does not perform a security check. A LinkDemand checks the permissions of the immediate caller rather than checking the permissions of all callers in the call stack. In this case, the permissions of the wrapper method will be checked. If the wrapper method does not, itself, check the permissions of callers higher in the call stack, malicious code might be able to execute the wrapped function even though it lacks permission to do so.</Description>
   <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182303(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="SecurityRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805">
   <Name>Do not initialize unnecessarily</Name>
   <Description>Do not make initializations that have already been done by the runtime.</Description>
   <Resolution Name="Default">{0} initializes field {1} of type {2} to {3}. Remove this initialization because it will be done automatically by the runtime.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182274(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="NoAllowedExceptions">{0} creates an exception of type {1}. Exceptions should not be raised in this type of method. If this exception instance might be raised, change this method's logic so it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/bb386039(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182338(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="UsageRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182240(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="DelegateParameter">In delegate {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/bb264492(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182244(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182234(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182245(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182247(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
   <Name>Initialize reference type static fields inline</Name>
   <Description>Static fields should be initialized when declared. Initializing static data in explicit static constructors results in less performant code.</Description>
   <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182275(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">CriticalWarning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182156(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/bb385967(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>Mark boolean P/Invoke arguments with MarshalAs</Name>
   <Description>All boolean P/Invoke parameters and return types should be explicitly marked with the MarshalAs attribute. By default, the system will marshal all booleans as 4-byte UnmanagedType.Bool. This is the correct behavior for Win32 'BOOL' arguments but incorrect for C++ 'bool' arguments, which should be marshaled as 1-byte UnmanagedType.U1. For code maintainability reasons, always explicitly specify the marshaling information for boolean arguments and return values.</Description>
   <Resolution Name="Default">Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Resolution Name="Return">Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182206(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="InteroperabilityRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MarkEnumsWithFlags" Category="Microsoft.Design" CheckId="CA1027">
   <Name>Mark enums with FlagsAttribute</Name>
   <Description>The enumeration appears to be made up of combinable flags. If this true, apply the Flags attribute to the enumeration.</Description>
   <Resolution Name="Default">The constituent members of {0} appear to represent flags that can be combined rather than discrete values. If this is correct, mark the enumeration with FlagsAttribute.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182159(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182161(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182162(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182353(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="UsageRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/bb264487(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="OverrideEqualsAndOperatorEqualsOnValueTypes" Category="Microsoft.Performance" CheckId="CA1815">
   <Name>Override equals and operator equals on value types</Name>
   <Description>The default System.ValueType implementation might not perform as well as a custom implementation.</Description>
   <Resolution Name="Equals">{0} should override Equals.</Resolution>
   <Resolution Name="op_Equality">{0} should override the equality (==) and inequality (!=) operators.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182276(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Parameter">As it is declared in your code, parameter {0} of P/Invoke {1} will be {2} bytes wide on {3} platforms. This is not correct, as the actual native declaration of this API indicates it should be {4} bytes wide on {3} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {5}.</Resolution>
   <Resolution Name="Return">As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182284(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="PortabilityRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
   <Name>Parameter names should match base declaration</Name>
   <Description>For usability reasons, parameter names in overridden methods should match those of the base declaration.</Description>
   <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182251(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/0fss9skc(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182278(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="PerformanceRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewVisibleEventHandlers" Category="Microsoft.Security" CheckId="CA2109">
   <Name>Review visible event handlers</Name>
   <Description>It appears that an event handler is externally visible or that an EventArgs parameter is being exposed in a visible method decorated with a security demand. There can be problems exposing sensitive functionality in an event handler function; the security demand might not do what you expect.</Description>
   <Resolution Name="Default">Consider making {0} not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182312(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="40">CriticalError</MessageLevel>
   <File Name="SecurityRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182190(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="Parameter">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182319(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="GlobalizationRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182172(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182258(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="NamingRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182181(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="DesignRules.dll" Version="9.0.0.0" />
  </Rule>
  <Rule TypeName="UseSafeHandleToEncapsulateNativeResources" Category="Microsoft.Reliability" CheckId="CA2006">
   <Name>Use SafeHandle to encapsulate native resources</Name>
   <Description>Use of IntPtr in managed code may indicate a potential security and reliability problem. All uses of IntPtr must be reviewed to determine whether use of a SafeHandle (or similar technology) is required in its place. Problems will occur if the IntPtr represents some native resource (memory, file handle, socket etc.) that managed code is considered to own. I.e. managed code is expected to in some way release the resource and failure to do so would cause resource leakage. In such scenarios security or reliability problems will also exist if multithreaded access is allowed to the IntPtr and a means of releasing the resource represented by the IntPtr. These problems involve recycling of the IntPtr value on resource release while simultaneous use of the resource is being made on another thread, leading to race conditions where one thread can read or write data associated with the wrong resource. For example, if your type stores an OS handle as an IntPtr and allows users to call both Close and any other method using that handle simultaneously (without some kind of synchronization), your code has a handle recycling problem, which causes data corruption and often a security vulnerability. SafeHandle (and its sibling class CriticalHandle) provide a mechanism for encapsulating a native handle to a resource so that such threading problems can be avoided (along with other issues such as the need to carefully control the lifetime of managed objects that contain a copy of the native handle over calls to native methods; ie, you can often remove calls to GC.KeepAlive). There are performance overheads implicit in using SafeHandle (and, to a lesser degree, CriticalHandle) which can often be mitigated through careful design.</Description>
   <Resolution Name="Default">Review usage of {0} (a {1} instance) to determine whether it should be replaced with a SafeHandle or CriticalHandle.</Resolution>
   <Owner />
   <Url>http://msdn2.microsoft.com/ms182294(VS.90).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="ReliabilityRules.dll" Version="9.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
